use std::sync::LazyLock;

use crate::make_list::CacheList;

static ID: LazyLock<Vec<i64>> = LazyLock::new(|| {
	vec![
		3505871, 3505872, 3505873, 3505881, 3505882, 3505883, 4505731, 4505732, 4506131, 6105851,
		6105852, 6105853, 6466520, 6466530, 6466820, 6466830, 27605572, 27605573, 28405992,
		28405993, 29405862, 29405863, 30505972, 30505973, 30506092, 30506093, 30606032, 30606033,
		31306252, 31306253, 31406312, 31406313, 32263720, 32263730, 32264120, 32264130, 32564720,
		32564730, 33265320, 33265330, 33265620, 33265630, 33365920, 33365930, 33366220, 33366230,
		34567920, 34567930, 34668420, 34668430, 34768720, 34768730, 34769020, 34769030, 35169320,
		35169330, 35369920, 35369930, 35470520, 35470530, 74205920, 74205930, 74205940, 74206140,
		391173621, 391173630, 394174520, 394174530, 394174820, 394174830, 397175520, 397175530,
		397175820, 397175830, 404177320, 404177330, 423182120, 423182130, 423182420, 423182430,
		424182720, 424182730, 424183020, 424183030, 425184020, 425184030, 425184320, 425184330,
		425184331, 431184620, 431184630, 431184920, 431184930, 432154620, 432154630, 433154720,
		433154730, 433185220, 433185230, 433185520, 433185530, 443186520, 443186530, 443186820,
		443186830, 445171120, 445171130, 445187120, 445187130, 445187420, 445187430, 452187720,
		452187730, 452188020, 452188030, 453188320, 453188330, 453188620, 453188630, 453188631,
		464189820, 464189830, 464189840, 464190120, 464190130, 464190141, 465191520, 465191530,
		465191820, 465191830, 466190920, 466190930, 466191220, 466191230, 466191231, 481192720,
		481192730, 481193020, 481193030, 483193920, 483193930, 483194220, 483194221, 483194230,
		483194231, 484194520, 484194530, 484194820, 484194821, 484194830, 484194831, 486196520,
		486196530, 486196820, 486196821, 486196830, 486196831, 487197120, 487197130, 487197420,
		487197421, 487197430, 487197431, 493197920, 493197930, 493198220, 493198230, 494198820,
		494198830, 494199120, 494199130, 503200020, 503200030, 503200320, 503200321, 503200330,
		503200331, 505200620, 505200630, 505200920, 505200921, 505200930, 505200931, 512202920,
		512202930, 512203220, 512203221, 512203230, 512203231, 513204120, 513204130, 513204420,
		513204421, 513204430, 513204431, 523205320, 523205330, 523205620, 523205621, 523205630,
		523205631, 532206320, 532206330, 532206620, 532206621, 532206630, 532206631, 533206920,
		533206930, 533207120, 533207121, 533207130, 533207131, 534207320, 534207330, 534207520,
		534207521, 534207530, 534207531, /* 535207720, 535207730,*/ 535208020, 535208030,
		535208220, 535208221, 535208230, 535208231, 543209720, 543209730, 543209920, 543209921,
		543209930, 543209931, 544210520, 544210521, 544210530, 544210531, 545210920, 545210930,
		545211220, 545211221, 545211230, 545211231, 553212020, 553212030, 553212320, 553212321,
		553212330, 553212331, 555212620, 555212630, 555212920, 555212921, 555212930, 555212931,
		556213220, 556213230, 556213520, 556213521, 556213530, 556213531, 563214620, 563214622,
		563214630, 563214920, 563214921, 563214930, 563214931, 565215220, 565215230, 565215520,
		565215521, 565215530, 565215531, 566215820, 566215830, 566216120, 566216121, 566216130,
		566216131, 574217220, 574217230, 574217520, 574217521, 574217530, 574217531, 575217820,
		575217830, 575217920, 575217930, 575218020, 575218030, 575218120, 575218130, 575218220,
		575218230, 575218520, 575218521, 575218530, 575218531, 576218820, 576218830, 576219020,
		576219030, 576219220, 576219230, 576219320, 576219330, 576219420, 576219430, 576219620,
		576219630, 576219720, 576219730, 577219820, 577219830, 577220120, 577220121, 577220130,
		577220131, 582220420, 582220430, 582220720, 582220721, 582220730, 582220731, 583221020,
		583221030, 583221320, 583221321, 583221330, 583221331, 583221620, 583221630, 583221920,
		583221930, 584222220, 584222230, 584222520, 584222530, 584222820, 584222830, 584223120,
		584223121, 584223130, 584223131, 593223720, 593223730, 593223740, 593224020, 593224021,
		593224030, 593224031, 593224041, 595224720, 595224730, 595225020, 595225030, 595225620,
		595225630, 595225640, 595225920, 595225921, 595225930, 595225931, 595225941,
	]
});

pub(super) fn make(list: &mut CacheList) {
	for id in ID.iter() {
		list.add_unversioned(format!("kcs/sound/kc9998/{}.mp3", id));
	}
}
